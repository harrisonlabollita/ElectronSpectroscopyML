import numpy as np
import sys
sys.path.append('/Users/harrisonlabollita/Library/Mobile Documents/com~apple~CloudDocs/Research Experience for Undegraduates/MSU REU/MSU REU Project/python/')
import ProcessingData as pd

#CREATE NECESSARY LISTS FOR "electron_densities.py"
# ------------------------------------------------------------------------------

# Highest energy locations
def highest_energy_location(grids):
    locations=[]
    for i in range(len(grids)):
        energy, location = pd.max_energy_matrix(grids[i])
        locations.append(location)
    return locations

#Create a list of figure spots used for plotting
def figure_spots():
    fig_spots = []
    for i in range(9,-1,-1):
        for j in range(0,10):
            fig_spots.append([i,j])
    return fig_spots

#This is the list of all of the starting pixels, it contains 100 values corresponding to the bottom left starting
#pixel [3,3] running to the top right starting pixel [12,12]

def starting_pixels():
    list_of_starting_pixels = []
    for i in range(3,13):
        for j in range(3,13):
            list_of_starting_pixels.append([i,j])
    return list_of_starting_pixels

def ranges():
    acceptable_ranges = [[[-15,-12],[-15,-12]],[[-12,-9],[-15,-12]],[[-9,-6],[-15,-12]],
                     [[-6,-3],[-15,-12]],[[-3,0],[-15,-12]],[[0,3],[-15,-12]],
                     [[3,6],[-15,-12]],[[6,9],[-15,-12]],[[9,12],[-15,-12]],
                    [[12,15],[-15,-12]],[[-15,-12],[-12,-9]],[[-12,-9],[-12,-9]],[[-9,-6],[-12,-9]],
                     [[-6,-3],[-12,-9]],[[-3,0],[-12,-9]],[[0,3],[-12,-9]],
                     [[3,6],[-12,-9]],[[6,9],[-12,-9]],[[9,12],[-12,-9]],
                    [[12,15],[-12,-9]],[[-15,-12],[-9,-6]],[[-12,-9],[-9,-6]],[[-9,-6],[-9,-6]],
                     [[-6,-3],[-9,-6]],[[-3,0],[-9,-6]],[[0,3],[-9,-6]],
                     [[3,6],[-9,-6]],[[6,9],[-9,-6]],[[9,12],[-9,-6]],
                    [[12,15],[-9,-6]],[[-15,-12],[-6,-3]],[[-12,-9],[-6,-3]],[[-9,-6],[-6,-3]],
                     [[-6,-3],[-6,-3]],[[-3,0],[-6,-3]],[[0,3],[-6,-3]],
                     [[3,6],[-6,-3]],[[6,9],[-6,-3]],[[9,12],[-6,-3]],
                    [[12,15],[-6,-3]], [[-15,-12],[-3,0]],[[-12,-9],[-3,0]],[[-9,-6],[-3,0]],
                     [[-6,-3],[-3,0]],[[-3,0],[-3,0]],[[0,3],[-3,0]],
                     [[3,6],[-3,0]],[[6,9],[-3,0]],[[9,12],[-3,0]],
                    [[12,15],[-3,0]],[[-15,-12],[0,3]],[[-12,-9],[0,3]],[[-9,-6],[0,3]],
                     [[-6,-3],[0,3]],[[-3,0],[0,3]],[[0,3],[0,3]],
                     [[3,6],[0,3]],[[6,9],[0,3]],[[9,12],[0,3]],
                    [[12,15],[0,3]],[[-15,-12],[3,6]],[[-12,-9],[3,6]],[[-9,-6],[3,6]],
                     [[-6,-3],[3,6]],[[-3,0],[3,6]],[[0,3],[3,6]],
                     [[3,6],[3,6]],[[6,9],[3,6]],[[9,12],[3,6]],
                    [[12,15],[3,6]], [[-15,-12],[6,9]],[[-12,-9],[6,9]],[[-9,-6],[6,9]],
                     [[-6,-3],[6,9]],[[-3,0],[6,9]],[[0,3],[6,9]],
                     [[3,6],[6,9]],[[6,9],[6,9]],[[9,12],[6,9]],
                    [[12,15],[6,9]], [[-15,-12],[9,12]],[[-12,-9],[9,12]],[[-9,-6],[9,12]],
                     [[-6,-3],[9,12]],[[-3,0],[9,12]],[[0,3],[9,12]],
                     [[3,6],[9,12]],[[6,9],[9,12]],[[9,12],[9,12]],
                    [[12,15],[9,12]], [[-15,-12],[12,15]],[[-12,-9],[12,15]],[[-9,-6],[12,15]],
                     [[-6,-3],[12,15]],[[-3,0],[12,15]],[[0,3],[12,15]],
                     [[3,6],[12,15]],[[6,9],[12,15]],[[9,12],[12,15]],
                    [[12,15],[12,15]]]
    return acceptable_ranges
